/*
 * NOTE: This copyright does *not* cover user programs that use HQ
 * program services by normal system calls through the application
 * program interfaces provided as part of the Hyperic Plug-in Development
 * Kit or the Hyperic Client Development Kit - this is merely considered
 * normal use of the program, and does *not* fall under the heading of
 * "derived work".
 *
 * Copyright (C) [2004-2007], Hyperic, Inc.
 * This file is part of HQ.
 *
 * HQ is free software; you can redistribute it and/or modify
 * it under the terms version 2 of the GNU General Public License as
 * published by the Free Software Foundation. This program is distributed
 * in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA.
 */

package org.hyperic.hq.hqu;

import org.hyperic.hq.hqu.server.session.Attachment;

/**
 * AttachmentDescriptors are requested by the UIPluginManager, through the
 * rendit_sys system, and ultimately are generated by HQUPlugin.groovy.
 * 
 * They represent all information about how the attachment should be 
 * displayed in the UI.
 * 
 * DevNote:  It seems like it would be better to provide a 'rendering context'
 *           when fetching the descriptor, and have getHTML() be reusable
 *           across different rendering methods (as an icon, as text, as both)
 */
public interface AttachmentDescriptor {
    /**
     * Get the associated attachment 
     */
    Attachment getAttachment();
    
    /**
     * Get the HTML used to render the attachment.  This is usually just the
     * text description, however it can be more elaborate (like using images
     * or javascript, etc.) 
     */
    String getHTML();
    
    /**
     * Get the help tag used to link the help button to the wiki help page.
     * This is usually something like 'Alert.Center'  
     */
    String getHelpTag();
    
    /**
     * Get the class representing this descriptor as an icon.  This is
     * usually found in 'web/css/HQ_40_OS.css' or the like.
     * e.g. "resourceIcon"
     */
    String getIconClass();
}
