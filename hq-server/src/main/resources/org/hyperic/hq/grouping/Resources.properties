#
# NOTE: This copyright does *not* cover user programs that use HQ
# program services by normal system calls through the application
# program interfaces provided as part of the Hyperic Plug-in Development
# Kit or the Hyperic Client Development Kit - this is merely considered
# normal use of the program, and does *not* fall under the heading of
#  "derived work".
#
#  Copyright (C) [2009-2010], VMware, Inc.
#  This file is part of HQ.
#
#  HQ is free software; you can redistribute it and/or modify
#  it under the terms version 2 of the GNU General Public License as
#  published by the Free Software Foundation. This program is distributed
#  in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
#  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE. See the GNU General Public License for more
#  details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
#  USA.
#
#

# Used by CritterPropType
critter.propType.string=string
critter.propType.date=date
critter.propType.enum=enumeration
critter.propType.resource=resource
critter.propType.proto=prototype
critter.propType.group=group
critter.propType.subject=subject

# Used by AvailabilityCritterType
availabilityType.critter.name=Availability Value
availabilityType.critter.desc=Matches resources against their availability
availabilityType.critter.config=Availability value matches {0}
availabilityType.critterProp.value.name=Availability Value
availabilityType.critterProp.value.purpose=a value to match against resource availability state

# Used by ResourceNameCritterType
resourceName.critter.name=Resource Name  
resourceName.critter.desc=Matches resource names against a regular expression
resourceName.critter.config=Resource name matches {0}
resourceName.critterProp.name.name=Name
resourceName.critterProp.name.purpose=a regex to match against the resource name

# Used by CompatGroupTypeCritterType
compatGroupType.critter.name=Compatible Group Type
compatGroupType.critter.desc=Matches Group Type against an enum
compatGroupType.critter.config=Compat Group Type is {0}
compatGroupType.critterProp.protoName.name=PrototypeName
compatGroupType.critterProp.protoName.purpose=an optional arg which represents the group to resource prototype

# Used by MixedGroupTypeCritterType
mixedGroupType.critter.name=Mixed Group Type
mixedGroupType.critter.desc=Matches Group Type against an enum
mixedGroupType.critter.config=Mixed Group Type is {0}
mixedGroupType.critterProp.subType.name=SubType
mixedGroupType.critterProp.subType.purpose=A group subtype

# Used by ResourceTypeCritterType
resourceType.critter.name=ResourceType
resourceType.critter.desc=Matches resource type name against a String
resourceType.critter.config=Resource type is {0}
resourceType.critterProp.typeName.name=Type Name
resourceType.critterProp.typeName.purpose=a string to match against the Resource Type name

# Used by ProtoCritterType
proto.critter.name=Prototype
proto.critter.desc=Matches prototype names against a string
proto.critter.config=Resource type is {0}
proto.critterProp.protoType.name=ProtoType
proto.critterProp.protoType.purpose=a string to match against a resources type

# Used by GroupMembershipCritterType
groupMembership.critter.name=Group Membership
groupMembership.critter.desc=Matches Group Membership against a Group ID
groupMembership.critter.config=GroupID is {0}
groupMembership.critterProp.group.name=GroupID
groupMembership.critterProp.group.purpose=An ID to Match Against Group Membership

# Used by ProtoNameCritterType
protoName.critter.name=Prototype Name
protoName.critter.desc=Matches prototype names against a regular expression
protoName.critter.config=Resource type matches {0}
protoName.critterProp.name.name=Name
protoName.critterProp.name.purpose=a regex to match against the prototype name

# Used by DescendantProtoCritterType
descendantProto.critter.name=Descendant Prototype
descendantProto.critter.desc=Matches descendent resources of a given type
descendantProto.critter.config=Resource is a descendant of {0} and is a {1}
descendantProto.critterProp.root.name=Root
descendantProto.critterProp.root.purpose=the root resource to find descendants of
descendantProto.critterProp.protoType.name=Prototype
descendantProto.critterProp.protoType.purpose=the resource type which descendants should match

# Used by NonSystemCritterType 
nonSystem.critter.name=Non-System  
nonSystem.critter.desc=Matches non-system resources
nonSystem.critter.config=Resource does not have the system flag set

# Used by OwnedCritterType
owned.critter.name=Owned
owned.critter.desc=Matches resources owned by user
owned.critter.config=Owner name matches {0}
owned.critterProp.owner.name=Owner
owned.critterProp.owner.purpose=A subject ID to match against resource ownership


