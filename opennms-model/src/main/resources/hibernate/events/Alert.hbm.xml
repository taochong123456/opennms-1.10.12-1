<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--

    NOTE: This copyright does *not* cover user programs that use HQ
    program services by normal system calls through the application
    program interfaces provided as part of the Hyperic Plug-in Development
    Kit or the Hyperic Client Development Kit - this is merely considered
    normal use of the program, and does *not* fall under the heading of
     "derived work".

     Copyright (C) [2009-2010], VMware, Inc.
     This file is part of HQ.

     HQ is free software; you can redistribute it and/or modify
     it under the terms version 2 of the GNU General Public License as
     published by the Free Software Foundation. This program is distributed
     in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     even the implied warranty of MERCHANTABILITY or FITNESS FOR A
     PARTICULAR PURPOSE. See the GNU General Public License for more
     details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
     USA.


-->

<hibernate-mapping package="org.hyperic.hq.events.server.session">

  <class name="Alert" table="EAM_ALERT">
    <cache usage="read-write"/>
    <id name="id" type="integer">
      <column name="ID" not-null="true"/>
      <generator class="org.hyperic.hibernate.id.ComboGenerator">
        <param name="sequence">EAM_ALERT_ID_SEQ</param>
      </generator>
    </id>

    <version name="_version_" type="long">
      <column name="VERSION_COL" default="0"/>
    </version>

    <property name="ctime" type="long">
      <column name="CTIME" not-null="true" index="ALERT_TIME_IDX"/>
    </property>

    <property name="fixed" type="boolean">
      <column name="FIXED" not-null="true"/>
    </property>

	<!-- We do not want to create the FK constraint to reduce deadlocks between 
		inserted alerts and updated alert definitions -->
    <many-to-one name="alertDefinition" class="AlertDefinition" foreign-key="none">
      <column name="ALERT_DEFINITION_ID" not-null="true" index="ALERT_ALERTDEFINITION_IDX"/>
    </many-to-one>

    <bag inverse="true" cascade="all" name="actionLogBag" 
         table="EAM_ALERT_ACTION_LOG" order-by="TIMESTAMP, ID" 
         optimistic-lock="false">
      <cache usage="read-write"/>
      <key on-delete="cascade" column="ALERT_ID"/>
      <one-to-many class="AlertActionLog"/>
    </bag>

    <bag inverse="true" cascade="all" name="conditionLogBag" order-by="id" 
         table="EAM_ALERT_CONDITION_LOG" optimistic-lock="false">
      <cache usage="read-write"/>
      <key on-delete="cascade" column="ALERT_ID"/>
      <one-to-many class="AlertConditionLog"/>
    </bag>
    
    
    <property name="stateId" formula="(select e.id from EAM_ESCALATION_STATE e where e.alert_id = id and e.alert_type = -559038737)"/>
    <property name="ackedBy" formula="(select e.acknowledged_by from EAM_ESCALATION_STATE e where e.alert_id = id and e.alert_type = -559038737)"/>
  </class>

</hibernate-mapping>
